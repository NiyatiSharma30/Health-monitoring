#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include "MAX30100_PulseOximeter.h"

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define BLYNK_TEMPLATE_ID "TMPL3NZUJZ_0x"
#define BLYNK_TEMPLATE_NAME "Quickstart Template"
char auth[] = "yZRnGd0VDZrnj0_n1WdHHGrDYpBOF78b";


/* WiFi credentials */
char ssid[] = "XXXXX ";
char pass[] = "XXXX";

#define REPORTING_PERIOD_MS     3000

 
PulseOximeter pox;
uint32_t tsLastReport = 0;

void onBeatDetected()
{
   ;
}

void setup()
{
    Serial.begin(115200);
    Blynk.begin(auth, ssid, pass);
    Serial.print("Initializing pulse oximeter..");
  

    // Initialize the PulseOximeter instance
    // Failures are generally due to an improper I2C wiring, missing power supply
    // or wrong target chip
    if (!pox.begin()) {
        Serial.println("FAILED");
        for(;;);
    } else {
        Serial.println("SUCCESS");
        digitalWrite(1,HIGH);
    }
     pox.setIRLedCurrent(MAX30100_LED_CURR_24MA);
 
    // Register a callback for the beat detection
    pox.setOnBeatDetectedCallback(onBeatDetected);
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include "MAX30100_PulseOximeter.h"

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

#define BLYNK_TEMPLATE_ID "TMPL3NZUJZ_0x"
#define BLYNK_TEMPLATE_NAME "Quickstart Template"
char auth[] = "xxxxxxxx";


/* WiFi credentials */
char ssid[] = "XXXXX ";
char pass[] = "XXXX";

#define REPORTING_PERIOD_MS     3000

 
PulseOximeter pox;
uint32_t tsLastReport = 0;

void onBeatDetected()
{
    ;
}

void setup()
{
    Serial.begin(115200);
    Blynk.begin(auth, ssid, pass);
    Serial.print("Initializing pulse oximeter..");
  

    // Initialize the PulseOximeter instance
    // Failures are generally due to an improper I2C wiring, missing power supply
    // or wrong target chip
    if (!pox.begin()) {
        Serial.println("FAILED");
        for(;;);
    } else {
        Serial.println("SUCCESS");
        digitalWrite(1,HIGH);
    }
     pox.setIRLedCurrent(MAX30100_LED_CURR_24MA);
 
    // Register a callback for the beat detection
    pox.setOnBeatDetectedCallback(onBeatDetected);

   

    
}
 
void loop()
{

  // Initiates SimpleTimer
  Blynk.run();
// Make sure to call update as fast as possible
pox.update();
    if (millis() - tsLastReport > REPORTING_PERIOD_MS) {


  // to android cell phone application
        Serial.print("BPM: ");
        Serial.print(pox.getHeartRate());
        //blue.println("\n");
        
        Serial.print("    SpO2: ");
        Serial.print(pox.getSpO2());
        Serial.print("%");
        Serial.println("\n");

Blynk.virtualWrite(V2,pox.getHeartRate() );
Blynk.virtualWrite(V3,pox.getSpO2());


        tsLastReport = millis();
    }  
    }
